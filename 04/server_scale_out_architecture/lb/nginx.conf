worker_processes auto;
pid /run/nginx.pid;
#替换为测试环境中有的日志目录
error_log /var/log/nginx/error.log warn;

#注意：执行nginx -V  stream部分显示--with-stream=dynamic 说明是动态加载，保留配置，并下载对应的so（如ubuntu上：apt-get install nginx-extras）；
#     如果是--with-stream，说明已经静态编译进二进制了，删除这一行配置。
load_module modules/ngx_stream_module.so;

events {
        worker_connections 768;
}

http {
    # HTTP 负载均衡
    upstream http_backend {
        #在这里指定所有下游http服务的ip和端口
        server 127.0.0.1:8081 max_fails=3 fail_timeout=10s;
        server 127.0.0.1:8082 max_fails=3 fail_timeout=10s;
        server 127.0.0.1:8083 max_fails=3 fail_timeout=10s;
    }

    server {
        listen 8080;
        server_name localhost;

        location / {
            proxy_pass http://http_backend;
            proxy_next_upstream error timeout http_500;
            proxy_next_upstream_tries 3;
        }
    }
}

stream {
    # TCP 负载均衡
    upstream tcp_backend {
        #在这里指定所有下游tcp服务的ip和端口
        server 127.0.0.1:7081 max_fails=3 fail_timeout=10s;
        server 127.0.0.1:7082 max_fails=3 fail_timeout=10s;
        server 127.0.0.1:7083 max_fails=3 fail_timeout=10s;
    }

    server {
        listen 7080;
        proxy_pass tcp_backend;
	proxy_next_upstream on;
	proxy_next_upstream_tries 3;
    }
}